{"version":3,"sources":["components/ListaProductos.jsx","components/FormularioProducto.jsx","components/MiCarrito.jsx","components/PreviewCarrito.jsx","App.js","serviceWorker.js","reducers/productos-reducer.js","reducers/carrito-reducer.js","reducers/index.js","index.js"],"names":["ListaProductos","addToCarrito","productoId","console","log","_this","props","dispatch","type","id","amount","_this2","this","productos","map","p","react_default","a","createElement","key","className","name","details","price","stock","onClick","length","Component","connect","state","FormularioProducto","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onFieldChanged","e","stateToUpdate","target","value","setState","addProduct","redirect","react_router","to","htmlFor","onChange","MiCarrito","reduceAmount","increaseAmount","totalCarrito","carrito","sort","b","c","producto","find","PreviewCarrito","totalPrice","forEach","App","react_router_dom","components_PreviewCarrito","exact","path","component","FormularioProductos","Boolean","window","location","hostname","match","arguments","undefined","action","newId","Math","max","apply","toConsumableArray","newProduct","concat","productoToIncreaseAmount","filteredState","filter","newProductoToCarrito","productToReduceAmount","rootReducer","combineReducers","ProductosReducer","CarritoReducer","ReactDOM","render","es","store","createStore","reducers","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e569d180.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport { connect } from \"react-redux\";\n\nimport styles from './ListaProductos.css'\n\nclass ListaProductos extends Component {\n\n  addToCarrito = (productoId) => {\n    console.log('productoId', productoId)\n    this.props.dispatch({\n      type: 'ADD_PRODUCT_TO_CARRITO',\n      id: productoId,\n      amount: 1\n    })\n  }\n\n  render() {\n    const productos = this.props.productos.map(p => {\n      return <div key={p.id} className=\"Producto\">\n        <h3>{p.name}</h3>\n        <p>{p.details}</p>\n        <h4>$ {p.price}</h4>\n        <div><span>{p.stock} en inventario</span></div>\n        <div>\n          <button onClick={() => this.addToCarrito(p.id)}>Agregar a carrito</button>\n        </div>\n      </div>\n    })\n    return (\n      <div className=\"ListaProductos\">\n        <h1>Lista Productos</h1>\n        <div>\n          {\n            productos.length > 0 ?\n            productos : \n            <div>No hay productos registrados</div>\n          }\n        </div>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  console.log(state)\n  return {\n    productos: state.productos\n  }\n}\n\nexport default connect(mapStateToProps)(ListaProductos);\n","import React, { Component } from 'react';\n\nimport { connect } from \"react-redux\";\n\nimport { Redirect } from \"react-router-dom\"\n\nclass FormularioProducto extends Component {\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      name: '',\n      details: '',\n      price: 0,\n      stock: 0\n    }\n  }\n\n  onFieldChanged = (e) => {\n    const field = e.target.name\n    const stateToUpdate = {}\n    stateToUpdate[field] = e.target.value\n    this.setState(stateToUpdate)\n  }\n\n  addProduct = () => {\n    this.props.dispatch({\n      type: 'ADD_PRODUCT',\n      name:  this.state.name,\n      details: this.state.details,\n      price: this.state.price,\n      stock: this.state.stock\n    })\n    this.setState({\n      redirect: true\n    })\n  }\n\n  render() {\n    if (this.state.redirect) return <Redirect to=\"/\"/>\n\n    return (\n      <div className=\"FormularioProducto\">\n        <h1>Formulario Producto</h1>\n\n        <div className=\"Formulario\">\n          <div>\n            <label htmlFor=\"\">Name</label>\n            <input name=\"name\" onChange={this.onFieldChanged} type=\"text\"/>\n          </div>\n          <div>\n            <label htmlFor=\"\">Details</label>\n            <input name=\"details\" onChange={this.onFieldChanged} type=\"text\"/>\n          </div>\n          <div>\n            <label htmlFor=\"\">Price</label>\n            <input name=\"price\" onChange={this.onFieldChanged} type=\"number\"/>\n          </div>\n          <div>\n            <label htmlFor=\"\">Stock</label>\n            <input name=\"stock\" onChange={this.onFieldChanged} type=\"number\"/>\n          </div>\n        </div>\n        <div>\n          <button onClick={this.addProduct}>Agregar Producto</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect()(FormularioProducto);\n","import React, { Component } from 'react';\n\nimport { connect } from \"react-redux\";\n\nimport './MiCarrito.css'\n\nclass MiCarrito extends Component {\n\n  reduceAmount = (productoId) => {\n    this.props.dispatch({\n      type: 'REMOVE_PRODUCT_FROM_CARRITO',\n      id: productoId,\n      amount: 1\n    })\n  }\n\n  increaseAmount = (productoId) => {\n    this.props.dispatch({\n      type: 'ADD_PRODUCT_TO_CARRITO',\n      id: productoId,\n      amount: 1\n    })\n  }\n\n\n  render() {\n    let totalCarrito = 0\n    const carrito = this.props.carrito\n      .sort((a, b) => a.productoId - b.productoId)\n      .map(c => {\n        const producto = this.props.productos.find(p => p.id == c.productoId )\n        totalCarrito += c.amount * producto.price\n        return <div key={c.productoId} className=\"ProductoEnCarrito\">\n          <div>\n            <b>{producto.name }</b>\n          </div>\n          <div>\n            ${producto.price}\n          </div> \n          <div>\n            <button onClick={() => this.reduceAmount(c.productoId)}>-</button>\n            <span> {c.amount} </span>\n            <button onClick={() => this.increaseAmount(c.productoId)}>+</button>\n          </div>\n          <div> ${c.amount * producto.price} </div>\n        </div>\n      })\n    return (\n      <div className=\"MiCarrito\">\n        <h1>Mi Carrito</h1>\n        { carrito.length > 0 ?\n          carrito : \n          <span>no tienes productos en el carrito</span>\n        }\n        <div>\n          TOTAL: ${totalCarrito}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state)\n  return {\n    carrito: state.carrito,\n    productos: state.productos\n  }\n}\n\nexport default connect(mapStateToProps)(MiCarrito);\n","import React, { Component } from 'react';\n\nimport { connect } from \"react-redux\";\n\nclass PreviewCarrito extends Component {\n  render() {\n    console.log('carrito', this.props.carrito)\n    let totalPrice = 0\n    this.props.carrito.forEach(c => {\n      const producto = this.props.productos.find(p => p.id == c.productoId)\n      console.log(producto)\n      totalPrice += c.amount * producto.price\n    })\n    console.log('precioTotal', totalPrice)\n    return (\n      <span className=\"PreviewCarrito\">\n        En Carrito: {this.props.carrito ? this.props.carrito.length : 0}. Total ${totalPrice}\n      </span>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state)\n  return {\n    carrito: state.carrito,\n    productos: state.productos\n  }\n}\n\nexport default connect(mapStateToProps)(PreviewCarrito);\n","import React, { Component } from 'react';\nimport './App.css';\n\n\nimport {Switch, Route, Link} from 'react-router-dom';\n\nimport ListaProductos from \"./components/ListaProductos\";\nimport FormularioProductos from \"./components/FormularioProducto\";\nimport MiCarrito from \"./components/MiCarrito\";\nimport PreviewCarrito from \"./components/PreviewCarrito\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <Link to=\"/\"> Prodcutos </Link>\n          <Link to=\"/new-product\"> + Producto </Link>\n          <Link to=\"/carrito\">\n            <PreviewCarrito/>\n          </Link>\n        </header>\n        <Switch>\n          <Route exact path=\"/\" component={ListaProductos}/>\n          <Route exact path=\"/new-product\" component={FormularioProductos}/>\n          <Route exact path=\"/carrito\" component={MiCarrito}/>\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","function productos (state = [\n  {\n    details: 'Detalle de producto 1',\n    name: 'Producto 1',\n    price: 10,\n    stock: 5,\n    id: 1\n  },\n  {\n    details: 'Detalle de producto 2',\n    name: 'Producto 2',\n    price: 20,\n    stock: 5,\n    id: 2\n  },\n  {\n    details: 'Detalle de producto 3',\n    name: 'Producto 3',\n    price: 30,\n    stock: 5,\n    id: 3\n  },\n  {\n    details: 'Detalle de producto 4',\n    name: 'Producto 4',\n    price: 40,\n    stock: 5,\n    id: 4\n  },\n], action) {\n  console.log('state productos', state)\n\n  switch (action.type) {\n    case 'BUY':\n      // action: {\n      //   id,\n      //   amount\n      // }\n\n      // decrementar en {amount} el stock del producto con {id}\n      return state\n    case 'SUPPLY':\n      // action: {\n      //   id,\n      //   amount\n      // }\n\n      // incrementar en {amount} el stock del producto con {id}\n      return state\n    case 'ADD_PRODUCT':\n      // action: {\n      //   name,\n      //   details,\n      //   price,\n      //   stock\n      // }\n      console.log('ADD_PRODUCT action',action)\n\n      const newId = Math.max(...state.map(p => p.id)) + 1\n      console.log('newId', newId)\n      const newProduct = {\n        id: newId,\n        name: action.name,\n        details: action.details,\n        price: action.price,\n        stock: action.stock\n      }\n\n      return [...state, newProduct ]\n    default:\n      return state\n  }\n}\n\nexport default productos","function carrito (state = [], action) {\n  console.log('state carrito', state)\n\n  switch (action.type) {\n    case 'ADD_PRODUCT_TO_CARRITO':\n      // action: {\n      //   id,\n      //   amount\n      // }\n      console.log('ADD_PRODUCT_TO_CARRITO action', action)\n      let productoToIncreaseAmount = state.find(c => c.productoId == action.id)\n      if (productoToIncreaseAmount) {\n        console.log('ya existe producto en carrito, aumento amount')\n        productoToIncreaseAmount.amount += action.amount \n        const filteredState = state.filter(c => c.productoId != action.id)\n        return [...filteredState, productoToIncreaseAmount]\n      } else {\n        console.log('nuevo producto a carrito')\n        const newProductoToCarrito = {\n          productoId: action.id,\n          amount: action.amount\n        }\n        return [...state, newProductoToCarrito]\n      }\n      \n    case 'REMOVE_PRODUCT_FROM_CARRITO':\n      // action: {\n      //   id,\n      //   amount\n      // }\n\n      let productToReduceAmount = state.find(c => c.productoId == action.id)\n\n      if ( productToReduceAmount ) {\n        console.log('tengo que reducir la cantidad en action.amount')\n        productToReduceAmount.amount -= action.amount \n        const filteredState = state.filter(c => c.productoId != action.id)\n        if (productToReduceAmount.amount == 0) {\n          return filteredState\n        } else {\n          return [...filteredState, productToReduceAmount]\n        }\n        //\n      } else {\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nexport default carrito","import { combineReducers } from 'redux';\nimport ProductosReducer from './productos-reducer'\nimport CarritoReducer from './carrito-reducer'\n\nconst rootReducer = combineReducers({\n\tproductos: ProductosReducer,\n  carrito: CarritoReducer\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport { HashRouter } from \"react-router-dom\";\n\nimport reducers from './reducers';\n\nReactDOM.render(\n  <Provider store={createStore(reducers)}>\n    <HashRouter>\n      <App/>\n    </HashRouter>\n  </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}